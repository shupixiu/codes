//这个是维基百科里的快排的例子，和通常讲解的实现思路不太一样，不过思想是一样的：分治

#include <stdio.h>
int a[] = { 1, 2, 8, 7, 9, 5, 6, 4, 3, 66, 77, 33, 22, 11 };
 
/* 输出数组前n各元素 */
void prt(int n)
{
    int i;
    for (i = 0; i < n; i++) 
   {
        printf("%d\t", a[i]);
    }
    printf("\n");
}
 
/* 数据交换 */
inline void swap(int *a, int *b)
{
    int tmp;
    tmp = *a; *a = *b; *b = tmp;
}
 
void quick_sort(int a[], int left, int right)
{
    int i = left + 1, j = right;
    int  key = a[left];
    if (left >= right) return;
    /* 从i++和j--两个方向搜索不满足条件的值并交换  *
     * 条件为：i++方向小于key，j--方向大于key      */
    while (1)
    {
       while (a[j] > key)
          j--;
       while (a[i] < key&&i<j) 
          i++;
       if(i >= j)
          break;
       swap(&a[i],&a[j]);
       if(a[i]==key)
           j--;
       else  
           i++;
    }
    /* 关键数据放到‘中间’ */
    swap(&a[left],&a[j]);
    if(left  < i - 1)   quick_sort(a, left, i - 1);
    if(j + 1 < right)  quick_sort(a, j + 1 , right);
}
 
int main(void) {
    /* 排序与输出 */
    quick_sort(a, 0, 13);
    prt(14);
    return 0;
}