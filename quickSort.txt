
#include <stdio.h>
int a[] = { 1, 2, 8, 7, 9, 5, 6, 4, 3, 66, 77, 33, 22, 11 };
 
/* 输出数组前n各元素 */
void prt(int n)
{
    int i;
    for (i = 0; i < n; i++) 
   {
        printf("%d\t", a[i]);
    }
    printf("\n");
}


//  http://www.cnblogs.com/morewindows/archive/2011/08/13/2137415.html    挖坑填数+分治法
// 这个方法运行暂时没有发现问题
void quick_sort(int s[], int l, int r)

{

    if (l < r)

    {

              //Swap(s[l], s[(l + r) / 2]); //将中间的这个数和第一个数交换 参见注1

        int i = l, j = r, x = s[l];

        while (i < j)

        {

            while(i < j && s[j] >= x) // 从右向左找第一个小于x的数

                            j--; 

            if(i < j)

                            s[i++] = s[j];       //这里实际上是两句代码  s[i]=s[j];i++;

                    

            while(i < j && s[i] < x) // 从左向右找第一个大于等于x的数

                            i++; 

            if(i < j)

                            s[j--] = s[i];

        }

        s[i] = x;

        quick_sort(s, l, i - 1); // 递归调用

        quick_sort(s, i + 1, r);

    }

}
int main(void) {
    /* 排序与输出 */
    quick_sort(a, 0, 13);
    prt(14);

    return 0;
}
